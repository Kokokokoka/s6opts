#compdef s6opts
# Copyright (C) 2015-2016 Eric Vidal <eric@obarun.org>
#
# Completion for s6opts
#
# This file is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
#
# This scripts is under License Beerware.
#
# "THE BEERWARE LICENSE" (Revision 42):
# <eric@obarun.org> wrote this file.  As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.   Eric Vidal http://obarun.org

_s6opts(){

typeset -A opt_args
local ret=1 context state line curcontext="$curcontext"

_arguments -C \
	'1:cmd:->cmds' \
	'*:: :->args' \
	&& ret=0

	
case $state in
	(cmds) 
		local commands; commands=(
			'add:add a service on service database'
			'remove:remove a service on service database' 
			'compile:compile the service database' 
			'switch:switch the current service database'
			'all:compile and switch the current database'
			'list:list of services on current database'
			'verbose:be more or less verbose (permanent change)'
			'remove_db:remove a service database'
			'which_db:current/previous service database used'
             ) 
         _describe -t commands 's6opts command' commands && ret=0    
        ret=0
        ;;
    (args)
		curcontext="${curcontext%:*:*}:svopts-cmd-$words[1]:"
		case $words[1] in
			add)
				local list_dir
				list_dir=( /etc/s6-serv/available/*(-/N:t) )
				(( $#list_dir )) && _values services $list_dir && ret=0
				[[ $words[CURRENT] = */* ]] && _directories && ret=0
				;;
			remove)
				local list_dir
				list_dir=( /etc/s6-serv/enabled/*(-/N:t) )
				(( $#list_dir )) && _values services $list_dir && ret=0
				[[ $words[CURRENT] = */* ]] && _directories && ret=0
				;;
			compile|switch|all|remove_db|list)
				local list_dir
				list_dir=( /etc/s6/compiled/*(-/N:t) )
				(( $#list_dir )) && _values database_name $list_dir && ret=0
				[[ $words[CURRENT] = */* ]] && _directories && ret=0
				;;
			which_db)
				local list_dir
				list_dir=(current previous)
				(( $#list_dir )) && _values link_name $list_dir && ret=0
				;;
			verbose)
				_message 'only 0,1,2, or 3 are valid'
				;;
			esac
	;;
esac

return $ret
}

_s6opts "$@"

