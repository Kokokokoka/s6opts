#!/usr/bin/bash
# Copyright (C) 2015-2016 Eric Vidal <eric@obarun.org>
#
# This file is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
#
# This scripts is under License Beerware.
#
# "THE BEERWARE LICENSE" (Revision 42):
# <eric@obarun.org> wrote this file.  As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.   Eric Vidal http://obarun.org


sourcing(){
	
	local list
	
	for list in /usr/lib/obarun/{common_functions,s6opts_functions} /etc/obarun/s6opts.conf; do
		if [[ -f "${list}" ]]; then
			source "${list}"
		else
			echo_error " Missing file : ${list}"
			exit	
		fi
	done
	
	unset list
}
sourcing

shellopts_save
shellopts_set_unset "extglob" 0

(( EUID == 0 )) || die " You must be run this script with root privileges"

if [[ -z "${2}" ]] && [[ "${1}" != @(list_db|which_db) ]]; then
	usage
	exit 1
fi

if [[ ! -h "${DATABASE_PATH}/current" ]] || [[ ! -h "${DATABASE_PATH}/previous" ]]; then
	cat << EOF
	
To properly manage the service database, the symlinks current|previous must exist.

The default is :
    /etc/s6/compiled/current -> /etc/s6/compiled/default
    /etc/s6/compiled/previous -> /etc/s6/compiled/previous
EOF
exit 1
fi

opts="${2}"
where_which="${3}"

case "${1}" in
	add)
	    add  "${opts}" "${where_which}"
	    ;;
	remove)
	    remove "${opts}" "${where_which}"
	    ;;
	compile)
	    compile "${opts}" "${where_which}"
	    ;;
	switch)
	    switch "${opts}"
	    ;;
	all)
	    compile_switch "${opts}" "${where_which}"
	    ;;
	list_db)
	    list_db "${opts}"
	    ;;
	list)
		list "${opts}"
		;;
	verbose)
	    verbose "${opts}"
	    ;;
	remove_db)
	    remove_db "${opts}"
	    ;;
	which_db)
	    which_db "${opts}"
	    ;;
	enable)
		enable "${opts}"
		;;
	disable)
		disable "${opts}"
		;;
	*)
	    usage
	    exit 1
	    ;;
esac

shellopts_restore

exit 0

